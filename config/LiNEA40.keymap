#define ZMK_POINTING_DEFAULT_SCRL_VAL 150

#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 1
#define MARK 2
#define CURSOR 3
#define FUNCTION 4
#define SCROLL 5
#define WIRELESS 6

//mouse cursol

&mmv {
    delay-ms = <20>;
    trigger-period-ms = <5>;
    time-to-max-speed-ms = <100>;
    acceleration-exponent = <2>;
};

//mouse scroll

&msc {
    delay-ms = <3>;
    trigger-period-ms = <3>;
    time-to-max-speed-ms = <100>;
    acceleration-exponent = <0>;
};

/ {
    input_processors {
        zip_wheel_scaler: zip_wheel_scaler {
            compatible = "zmk,input-processor-scaler";
            #input-processor-cells = <2>;
            type = <INPUT_EV_REL>;
            codes = <INPUT_REL_WHEEL>;
            track-remainders;
        };
    };
};

&msc_input_listener {
    speed_up {
        layers = <FUNCTION>;
        input-processors = <&zip_wheel_scaler 3 1>; //スクロールを3倍速にする
    };
};

&trackball_listener {
    scroller {
        layers = <SCROLL>;
        input-processors =
            <&zip_xy_transform INPUT_TRANSFORM_Y_INVERT>,
            //スクロール方向を逆転,,,,,,
            <&zip_xy_to_scroll_mapper>;
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        lang1 {
            bindings = <&kp LANGUAGE_1>;
            key-positions = <15 16>;
        };

        lang2 {
            bindings = <&kp LANGUAGE_2>;
            key-positions = <5 6>;
        };
    };

    behaviors {
        re_kp: sensor_rotate_kp {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        mouse_scrl: mouse_wheel_scrl {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E               &kp R    &kp T                              &kp Y  &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D               &kp F    &kp G                              &kp H  &kp J  &kp K      &kp L    &kp BACKSPACE
&mt LEFT_SHIFT Z  &kp X         &kp C               &kp V    &kp B                              &kp N  &kp M  &kp COMMA  &kp DOT  &kp SLASH
&mt LCTRL ESC     &kp LEFT_WIN  &mt LEFT_ALT GRAVE  &kp INS  &lt 3 TAB  &kp SPACE    &kp ENTER  &mo 2         &mo 6      &mo 5    &lt 4 BACKSLASH
            >;

            sensor-bindings = <&mouse_scrl SCRL_DOWN SCRL_UP>;
        };

        //1

        MOUSE {
            bindings = <
&trans            &trans        &trans        &trans  &trans                    &trans  &trans    &trans    &trans    &trans
&trans            &trans        &trans        &trans  &trans                    &trans  &mkp MB1  &mkp MB3  &mkp MB2  &mkp MB4
&kp LEFT_SHIFT    &trans        &trans        &trans  &trans                    &trans  &trans    &trans    &trans    &mkp MB5
&kp LEFT_CONTROL  &kp LEFT_GUI  &kp LEFT_ALT  &trans  &trans  &trans    &trans  &trans            &trans    &trans    &trans
            >;
        };

        //2

        MARK {
            bindings = <
&kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(NUMBER_5)                    &trans  &kp LS(NUMBER_9)  &kp LS(N0)         &trans         &kp DELETE
&kp LS(NUMBER_6)  &kp LS(NUMBER_7)  &kp LS(NUMBER_8)  &kp LS(NUMBER_9)  &kp LS(NUMBER_0)                    &trans  &kp MINUS         &kp EQUAL          &kp SEMICOLON  &kp SQT
&bt BT_SEL 0      &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3      &bt BT_SEL 4                        &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans         &trans
&bt BT_CLR        &bt BT_CLR_ALL    &trans            &trans            &trans            &trans    &trans  &trans                    &trans             &trans         &trans
            >;

            sensor-bindings = <&re_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        //3

        CURSOR {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                    &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5                          &trans        &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp DELETE
&kp F6        &kp F7        &kp F8        &kp F9        &kp F10                         &trans        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans
&kp F11       &kp F12       &trans        &trans        &trans        &trans    &trans  &trans                      &kp NUMBER_0  &trans        &trans
            >;
        };

        //4

        FUNCTION {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5                     &trans      &trans  &kp LA(PRINTSCREEN)  &trans  &kp LC(LA(DELETE))
&kp F6  &kp F7  &kp F8  &kp F9   &kp F10                    &trans      &trans  &kp LS(LG(S))        &trans  &kp LC(LS(ESCAPE))
&trans  &trans  &trans  &kp F11  &kp F12                    &kp C_MUTE  &trans  &trans               &trans  &kp LC(LA(INS))
&trans  &trans  &trans  &trans   &trans   &trans    &trans  &trans              &trans               &trans  &trans
            >;

            sensor-bindings = <&mouse_scrl SCRL_DOWN SCRL_UP>;
        };

        //5

        SCROLL {
            bindings = <
&trans    &kp LC(LG(LEFT_ARROW))  &kp UP_ARROW  &kp LC(LG(RIGHT_ARROW))  &trans                    &kp KP_MULTIPLY  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp KP_PLUS
&trans    &kp LEFT_ARROW          &kp DOWN      &kp RIGHT_ARROW          &trans                    &kp KP_SLASH     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp KP_MINUS
&kp HOME  &kp PAGE_DOWN           &kp END       &kp PAGE_UP              &trans                    &kp UNDER        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ENTER
&trans    &trans                  &trans        &trans                   &trans  &trans    &tog 0  &kp NUMBER_0                   &kp NUMBER_0  &kp DOT       &kp QUESTION
            >;

            sensor-bindings = <&inc_dec_kp DOWN_ARROW UP_ARROW>;
        };

        //6

        WIRELESS {
            bindings = <
&trans          &kp UP_ARROW    &trans           &trans  &trans                         &trans          &trans  &trans          &trans          &trans
&kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans                         &trans          &trans  &trans          &trans          &trans
&trans          &trans          &trans           &trans  &trans                         &trans          &trans  &tog 0          &kp UP_ARROW    &trans
&trans          &trans          &trans           &trans  &trans  &trans    &bootloader  &studio_unlock          &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW
            >;

            sensor-bindings = <&inc_dec_kp RIGHT_ARROW LEFT_ARROW>;
        };
    };
};
